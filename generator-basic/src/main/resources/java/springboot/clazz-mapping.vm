package ${packageName};

import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;

import ${firstClazzName};
import ${secondClazzName};

import org.springframework.stereotype.Component;


@Component
public class ${model.javaMappingClazzSimpleName} {

    public ${model.objects[0].javaClazzSimpleName} toEntity(${model.objects[1].javaClazzSimpleName} source)
    {
        ${model.objects[0].javaClazzSimpleName} dest = new ${model.objects[0].javaClazzSimpleName}();
        #foreach( $mappingDTOEntityEntrie in $mappingSecondFirstEntries )
        ${mappingDTOEntityEntrie}
        #end
        return dest;
    }

    public ${model.objects[1].javaClazzSimpleName} toDTO(${model.objects[0].javaClazzSimpleName} source)
    {
        ${model.objects[1].javaClazzSimpleName} dest = new ${model.objects[1].javaClazzSimpleName}();
        #foreach( $mappingEntityDTOEntrie in $mappingFirstSecondEntries )
        ${mappingEntityDTOEntrie}
        #end
        return dest;
    }

    public List<${model.objects[1].javaClazzSimpleName}> toDTOs(Collection<${model.objects[0].javaClazzSimpleName}> sources) {
        return sources.stream().map(source -> toDTO(source)).collect(Collectors.toList());
    }

    public List<${model.objects[0].javaClazzSimpleName}> toEntities(Collection<${model.objects[1].javaClazzSimpleName}> sources) {
        return sources.stream().map(source -> toEntity(source)).collect(Collectors.toList());
    }



}